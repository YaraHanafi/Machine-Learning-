#Import git libraries
%tensorflow_version 2.x
import tensorflow as tf
from google.colab.patches import cv2_imshow
import numpy as np

#Step 1:Collect Data
mnist = tf.keras.datasets.mnist

(x_train,y_train) , (x_test, y_test) = mnist.load_data()
x_test, x_train= x_test / 255.0, x_train / 255.0
y_test, y_train = tf.one_hot(y_test, 10), tf.one_hot(y_train,10)

#Step 2:Build a model
model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28,28)),
  tf.keras.layers.Dense(128, activation = 'relu'),
  tf.keras.layers.Dense(128, activation = 'relu'),
  tf.keras.layers.Dense(128, activation = 'relu'),
  tf.keras.layers.Dense(10, activation = 'softmax')
])

#Step 3: Define Loss
model.compile(optimizer="sgd",
             loss='mse',
             metrics=["accuracy"])

#Step 4: Run and Optimize Theta's
model.summary()
model.fit(x_train,y_train,epochs=5)
model.evaluate(x_test,y_test)

#Step 5: Test Our Model
image1=x_test[0]
image2=x_test[999]

cv2_imshow(image1*255)
cv2_imshow(image2*255)

#Make array of images
images_to_predict=np.array((image1, image2))
predictions= model.predict(images_to_predict)

print("Prediction 1 is: "+ str(np.argmax(predictions[0])))
print("Prediction 2 is: "+ str(np.argmax(predictions[1])))
